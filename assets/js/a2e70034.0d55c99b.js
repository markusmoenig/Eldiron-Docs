"use strict";(self.webpackChunkeldiron_docs=self.webpackChunkeldiron_docs||[]).push([[1995],{3583:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"reference/scripting_client","title":"Scripting: Client","description":"Client side scripting happens in the userevent section of scripts (and only for player characters). You can delete the userevent section for non player characters.","source":"@site/docs/reference/scripting_client.md","sourceDirName":"reference","slug":"/reference/scripting_client","permalink":"/docs/reference/scripting_client","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Scripting: Client","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Events","permalink":"/docs/reference/events"},"next":{"title":"Scripting: Server","permalink":"/docs/reference/scripting_server"}}');var t=r(4848),s=r(8453);const c={title:"Scripting: Client",sidebar_position:4},o="Client Side Scripting",l={},d=[{value:"Usage",id:"usage",level:2},{value:"<code>action</code>",id:"action",level:2},{value:"Action Types",id:"action-types",level:2},{value:"<code>forward</code>",id:"forward",level:3},{value:"<code>left</code>",id:"left",level:3},{value:"<code>right</code>",id:"right",level:3},{value:"<code>backward</code>",id:"backward",level:3},{value:"<code>none</code>",id:"none",level:3},{value:"<code>intent</code>",id:"intent",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"client-side-scripting",children:"Client Side Scripting"})}),"\n",(0,t.jsxs)(n.p,{children:["Client side scripting happens in the ",(0,t.jsx)(n.code,{children:"user_event"})," section of scripts (and only for player characters). You can delete the ",(0,t.jsx)(n.code,{children:"user_event"})," section for non player characters."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Player characters must be marked with ",(0,t.jsx)(n.code,{children:"player = true"})," in their data to receive input events."]})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["Example ",(0,t.jsx)(n.code,{children:"user_event()"})," script for handling key presses:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    def user_event(self, event, value):\n        if event == 'key_down':\n            if value == 'w':\n                action(\"forward\")\n            if value == 'a':\n                action(\"left\")\n            if value == 'd':\n                action(\"right\")\n            if value == 's':\n                action(\"backward\")\n\n            if value == 'u':\n                intent(\"use\")\n            if value == 't':\n                intent(\"attack\")\n            if value == 'k':\n                intent(\"take\")\n\n        if event == 'key_up':\n                action(\"none\")\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"action",children:(0,t.jsx)(n.code,{children:"action"})}),"\n",(0,t.jsxs)(n.p,{children:["Triggers a movement or rotation action for a player character. This command is typically used in response to user input inside the ",(0,t.jsx)(n.code,{children:"user_event()"})," method of a player-controlled character."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"action-types",children:"Action Types"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"action()"})," command accepts the following action types:"]}),"\n",(0,t.jsx)(n.h3,{id:"forward",children:(0,t.jsx)(n.code,{children:"forward"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'action("forward")\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"2D / Isometric"}),": Move the player north."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"First-Person"}),": Move the player forward in their current facing direction."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"left",children:(0,t.jsx)(n.code,{children:"left"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'action("left")\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"2D / Isometric"}),": Move the player west."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"First-Person"}),": Rotate the player to their left."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"right",children:(0,t.jsx)(n.code,{children:"right"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'action("right")\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"2D / Isometric"}),": Move the player east."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"First-Person"}),": Rotate the player to their right."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"backward",children:(0,t.jsx)(n.code,{children:"backward"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'action("backward")\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"2D / Isometric"}),": Move the player south."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"First-Person"}),": Move the player backward in their current facing direction."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"none",children:(0,t.jsx)(n.code,{children:"none"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'action("none")\n'})}),"\n",(0,t.jsx)(n.p,{children:"Stops any ongoing movement or rotation."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"intent",children:(0,t.jsx)(n.code,{children:"intent"})}),"\n",(0,t.jsxs)(n.p,{children:["Tells the server that the next movement action or click is not movement based, but rather has a specific intent behind it. You can send any string with this command as long as you handle it inside the ",(0,t.jsx)(n.a,{href:"/docs/reference/events#intent",children:"intent event"})," for characters or items."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"intent"})," command in the ",(0,t.jsx)(n.code,{children:"user_events"})," is useful for providing short-cuts, for the user interface use ",(0,t.jsx)(n.a,{href:"/docs/reference/screens_widgets#button-widgets",children:"button widgets"}),"."]}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var i=r(6540);const t={},s=i.createContext(t);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);