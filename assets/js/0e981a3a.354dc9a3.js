"use strict";(self.webpackChunkeldiron_docs=self.webpackChunkeldiron_docs||[]).push([[2791],{517:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025/07/16/eldiron-v0.8.50","source":"@site/blog/2025-07-16-eldiron-v0.8.50.mdx","title":"Eldiron v0.8.50 Released","description":"Eldiron v0.8.50 Released","date":"2025-07-16T00:00:00.000Z","tags":[{"inline":false,"label":"releases","permalink":"/blog/tags/blog/tags/releases"}],"readingTime":2.84,"hasTruncateMarker":true,"authors":[{"name":"Markus Moenig","title":"Eldiron maintainer","url":"https://github.com/markusmoenig","page":{"permalink":"/blog/authors/markusm"},"socials":{"x":"https://x.com/markusmoenig","github":"https://github.com/markusmoenig","bluesky":"https://bsky.app/profile/markusmoenig.bsky.social"},"imageURL":"https://github.com/markusmoenig.png","key":"markusm"}],"frontMatter":{"title":"Eldiron v0.8.50 Released","authors":["markusm"],"tags":["releases"]},"unlisted":false,"nextItem":{"title":"New Video | Rigging","permalink":"/blog/2025/06/16/eldiron-v0.8.4_rigging"}}')},833:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var i=t(517),s=t(4848),r=t(8453);const a={title:"Eldiron v0.8.50 Released",authors:["markusm"],tags:["releases"]},o=void 0,l={authorsImageUrls:[void 0]},d=[{value:"Eldiron v0.8.50 Released",id:"eldiron-v0850-released",level:2},{value:"New Features",id:"new-features",level:2},{value:"Server",id:"server",level:3},{value:"Client",id:"client",level:3},{value:"Creator",id:"creator",level:3},{value:"Bug Fixes",id:"bug-fixes",level:2},{value:"Documentation",id:"documentation",level:2}];function c(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"eldiron-v0850-released",children:"Eldiron v0.8.50 Released"}),"\n",(0,s.jsx)(n.p,{children:"After I was mostly working on the graphical aspects of Eldiron in the last releases, this release focuses on the core gameplay mechanics."}),"\n",(0,s.jsx)(n.h2,{id:"new-features",children:"New Features"}),"\n",(0,s.jsx)(n.h3,{id:"server",children:"Server"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"New 'entered' and 'left' entity system events when entering / leaving named sectors."}),"\n",(0,s.jsx)(n.li,{children:"New 'teleport' command which either takes one argument (destination sector name in the same region) or two, the destination sector name and the name of the destination region (which will transfer the character to a different region). The entity will be transferred to the center of the destination sector."}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"[light]"})," data attributes to enable light emission for entities and items."]}),"\n",(0,s.jsx)(n.li,{children:"New 'set_emit_light(True / False)` cmd to enable / disable light emission for an entity or an item."}),"\n",(0,s.jsxs)(n.li,{children:["New special ",(0,s.jsx)(n.code,{children:"active"})," item attribute which specifies if the item is active or not. On startup (or if the attribute is changed) a new ",(0,s.jsx)(n.code,{children:"active"})," event is send to the item which can than decide what to do based on the value, like enabling / disabling light emission for a torch."]}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"intent"}),' system. Define the current player intent (like "talk", "use", "open" etc.) via the new ',(0,s.jsx)(n.code,{children:"intent"})," parameter for button widgets. Server will send new ",(0,s.jsx)(n.code,{children:"intent"})," events to both entities and items for direction based and click based item interations."]}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"health"})," config attribute which holds the name of the default entity health attribute, by default ",(0,s.jsx)(n.code,{children:"HP"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"mode"})," entity attribute which holds the current state string of the entity. Set to ",(0,s.jsx)(n.code,{children:"active"})," on entity instantiation and ",(0,s.jsx)(n.code,{children:"dead"})," when the health attribute is smaller or equal to 0."]}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"death"})," event send to an entity when the health attribute is smaller or equal to 0."]}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"id"})," command which returns the id of the current entity."]}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"took_damage"})," command (my_id, from_id, damage_amount). This command sends out messages and checks for death."]}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"goto"})," command (sector name, speed). Makes an NPC go to a sector. Sends ",(0,s.jsx)(n.code,{children:"arrived"})," event on arrival with the name of the sector as value."]}),"\n",(0,s.jsxs)(n.li,{children:["New  ",(0,s.jsx)(n.code,{children:"close_in"})," command (target id, target radius, speed). Makes an NPC close in (in weapon range given by the target radius) of the entity id with the given speed. Once the target is in range a ",(0,s.jsx)(n.code,{children:"closed_in"})," event is send."]}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"kill"})," event send to the attacker when he kills his target. The value of the event is the id of the dead target."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"client",children:"Client"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"intent"})," command to invoke an intention via key shortcuts (same as actions)."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"creator",children:"Creator"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Tileset tool: Preview icons now in the minimap."}),"\n",(0,s.jsx)(n.li,{children:"Tilepicker: Icons preview on hover in the minimap."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"bug-fixes",children:"Bug Fixes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Make game widgets honor the global render graph."}),"\n",(0,s.jsx)(n.li,{children:"Info viewer did not show item values correctly."}),"\n",(0,s.jsxs)(n.li,{children:["Changed ",(0,s.jsx)(n.code,{children:"Data"})," tool shortcut from ",(0,s.jsx)(n.code,{children:"A"})," to ",(0,s.jsx)(n.code,{children:"D"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"When adding tiles to the project the background renderer was not updated correctly."}),"\n",(0,s.jsx)(n.li,{children:"Adjust Undo / Redo state when switching regions."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cleaned up and refactored the reference section of the documentation of Eldiron.com."}),"\n",(0,s.jsx)(n.li,{children:"Wrote documentation in the reference for all new features and changes."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"The plan is to finish the remaining missing core gameplay mechanics in the next 1-2 releases (and feature them in the Hideout 2D example), implement the node based behavior system and after that focus on a 3D Dungeon crawler example. Than we are not too far away from version 1!"}),"\n",(0,s.jsx)(n.p,{children:"I will create a new video showcasing all the new features soon, so don't forget to check and subscribe to the YouTube channel!"}),"\n",(0,s.jsx)(n.p,{children:"Take care,\nMarkus"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);