"use strict";(self.webpackChunkeldiron_docs=self.webpackChunkeldiron_docs||[]).push([[570],{8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>c});var r=n(6540);const i={},s=r.createContext(i);function l(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:t},e.children)}},9390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"reference/attributes","title":"Attributes","description":"This chapter lists all supported attributes for characters and items in Eldiron.","source":"@site/docs/reference/attributes.md","sourceDirName":"reference","slug":"/reference/attributes","permalink":"/docs/reference/attributes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Attributes","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Reference","permalink":"/docs/category/reference"},"next":{"title":"Configuration","permalink":"/docs/reference/configuration"}}');var i=n(4848),s=n(8453);const l={title:"Attributes",sidebar_position:1},c=void 0,o={},d=[{value:"Attributes",id:"attributes",level:2},{value:"<code>active</code>",id:"active",level:2},{value:"<code>blocking</code>",id:"blocking",level:2},{value:"<code>color</code>",id:"color",level:2},{value:"<code>color_targets</code>",id:"color_targets",level:2},{value:"<code>geo_targets</code>",id:"geo_targets",level:2},{value:"<code>inventory_slots</code>",id:"inventory_slots",level:2},{value:"<code>monetary</code>",id:"monetary",level:2},{value:"<code>name</code>",id:"name",level:2},{value:"<code>player</code>",id:"player",level:2},{value:"<code>radius</code>",id:"radius",level:2},{value:"<code>slot</code>",id:"slot",level:2},{value:"<code>static</code>",id:"static",level:2},{value:"<code>tile_id</code>",id:"tile_id",level:2},{value:"<code>visible</code>",id:"visible",level:2},{value:"<code>worth</code>",id:"worth",level:2},{value:"Emitting Light",id:"emitting-light",level:2}];function a(e){const t={a:"a",br:"br",code:"code",em:"em",h2:"h2",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["This chapter lists all supported ",(0,i.jsx)(t.strong,{children:"attributes"})," for characters and items in Eldiron.",(0,i.jsx)(t.br,{}),"\n","Attributes can be set via the ",(0,i.jsx)(t.a,{href:"/docs/creator/characters#instances",children:"Code Tool (Python)"})," or ",(0,i.jsx)(t.a,{href:"/docs/creator/items",children:"Data Tool (TOML)"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Attributes are noted in each description as to whether they apply to characters, items, or both."}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"attributes",children:"Attributes"}),"\n",(0,i.jsx)(t.h2,{id:"active",children:(0,i.jsx)(t.code,{children:"active"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Item-only attribute."})}),"\n",(0,i.jsxs)(t.p,{children:["Represents the active state of an item (on or off). When this attribute is changed, an ",(0,i.jsx)(t.a,{href:"/docs/reference/events#active",children:"active event"})," is automatically send to the item to allow the item to sync its visual state."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:"active = true\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"blocking",children:(0,i.jsx)(t.code,{children:"blocking"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Item-only attribute."})}),"\n",(0,i.jsxs)(t.p,{children:["If set to ",(0,i.jsx)(t.code,{children:"true"}),", the item blocks movement based on its radius."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:"blocking = true\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"color",children:(0,i.jsx)(t.code,{children:"color"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Item-only attribute."})}),"\n",(0,i.jsx)(t.p,{children:"Hex color code that overrides geometry color when item is equipped."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:'color = "#ff0000"\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"color_targets",children:(0,i.jsx)(t.code,{children:"color_targets"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Item-only attribute."})}),"\n",(0,i.jsx)(t.p,{children:"List of geometry node names whose color should be overridden when the item is equipped."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:'color_targets = ["left_leg", "right_leg"]\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"geo_targets",children:(0,i.jsx)(t.code,{children:"geo_targets"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Item-only attribute."})}),"\n",(0,i.jsxs)(t.p,{children:["List of linedef names to attach this item's geometry to when equipped.",(0,i.jsx)(t.br,{}),"\n","Used only when automatic matching by ",(0,i.jsx)(t.code,{children:"slot"})," is insufficient."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:'geo_targets = ["left_shoulder", "right_shoulder"]\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"inventory_slots",children:(0,i.jsx)(t.code,{children:"inventory_slots"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Character-only attribute."})}),"\n",(0,i.jsx)(t.p,{children:"Number of inventory slots the character has. If not specified, defaults to 0."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:"inventory_slots = 8\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"monetary",children:(0,i.jsx)(t.code,{children:"monetary"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Item-only attribute."})}),"\n",(0,i.jsxs)(t.p,{children:["If ",(0,i.jsx)(t.code,{children:"true"}),", the item is considered money. It is not picked up normally, but its worth is added to the wallet."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:"monetary = true\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"name",children:(0,i.jsx)(t.code,{children:"name"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"General attribute (applies to both characters and items)."})}),"\n",(0,i.jsx)(t.p,{children:"Name of the character or item. Can override the template name."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:'name = "Golden Key"\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"player",children:(0,i.jsx)(t.code,{children:"player"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Character-only attribute."})}),"\n",(0,i.jsx)(t.p,{children:"Marks the character as a player-controlled character that receives input events."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:"player = true\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"radius",children:(0,i.jsx)(t.code,{children:"radius"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"General attribute (applies to both characters and items)."})}),"\n",(0,i.jsxs)(t.p,{children:["Collision radius of the character or item. Default is ",(0,i.jsx)(t.code,{children:"0.5"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:"radius = 0.3\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"slot",children:(0,i.jsx)(t.code,{children:"slot"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Item-only attribute."})}),"\n",(0,i.jsxs)(t.p,{children:["Slot name the item occupies when equipped (e.g. ",(0,i.jsx)(t.code,{children:'"legs"'}),", ",(0,i.jsx)(t.code,{children:'"head"'}),")."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:'slot = "legs"\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"static",children:(0,i.jsx)(t.code,{children:"static"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Item-only attribute."})}),"\n",(0,i.jsxs)(t.p,{children:["If ",(0,i.jsx)(t.code,{children:"true"}),", the item is static and cannot be picked up (e.g. doors, campfires)."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:"static = true\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"tile_id",children:(0,i.jsx)(t.code,{children:"tile_id"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"General attribute (applies to both characters and items)."})}),"\n",(0,i.jsx)(t.p,{children:"Tile ID for the visual representation. Use the tile picker to find valid IDs."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:'tile_id = "abc123"\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"visible",children:(0,i.jsx)(t.code,{children:"visible"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"General attribute (applies to both characters and items)."})}),"\n",(0,i.jsx)(t.p,{children:"Whether the character or item is visible in the world."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:"visible = false\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"worth",children:(0,i.jsx)(t.code,{children:"worth"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Item-only attribute."})}),"\n",(0,i.jsx)(t.p,{children:"Trade value of the item in base currency."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:"worth = 12.5\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"emitting-light",children:"Emitting Light"}),"\n",(0,i.jsxs)(t.p,{children:["Both entities and items can emit light by configuring the ",(0,i.jsx)(t.code,{children:"light"})," group in their data tool."]}),"\n",(0,i.jsxs)(t.p,{children:["Light emittance can be set on / off via the ",(0,i.jsx)(t.a,{href:"/docs/reference/scripting_server#set_emit_light",children:"set_emit_light"})," command."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",children:'[light]\ncolor = "#ffffff" # Light Color\nstrength = 5.0      # Strength of the Light\nrange = 3.0         # Range of the light\nflicker = 0.4       # Amount of light flickering\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);